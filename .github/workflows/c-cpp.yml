name: Build & Deploy Engine
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            targetos: linux
            targetarch: amd64
          - os: ubuntu-18.04
            targetos: linux
            targetarch: i386
          - os: windows-latest
            targetos: win32
            targetarch: amd64
          - os: windows-latest
            targetos: win32
            targetarch: i386
    env:
      SDL_VERSION: 2.0.14
      GH_CPU_ARCH: ${{ matrix.targetarch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Checkout xash-extras
      uses: actions/checkout@v2
      with:
        repository: FWGS/xash-extras
        path: xash-extras

    - name: Install dependencies (linux-i386)
      if: matrix.targetos == 'linux' && matrix.targetarch == 'i386'
      run: |
        sudo dpkg --add-architecture i386
        sudo apt update
        sudo apt install gcc-multilib g++-multilib libx11-dev:i386 libxext-dev:i386 x11-utils libgl1-mesa-dev libasound-dev libstdc++6:i386 libfuse2:i386 zlib1g:i386
    - name: Install dependencies (linux-amd64)
      if: matrix.targetos == 'linux' && matrix.targetarch == 'amd64'
      run: |
        sudo apt update
        sudo apt install gcc-multilib g++-multilib libx11-dev libxext-dev x11-utils libgl1-mesa-dev libasound-dev libstdc++6 libfuse2 zlib1g
    - name: Install dependencies (windows)
      if: matrix.targetos == 'win32'
      run: |
        choco install wget

    
    - name: Cache SDL2 zip
      if: matrix.targetos == 'linux' || matrix.targetos == 'win32'
      id: cache-sdl2
      uses: actions/cache@v2
      with:
        path: SDL2.zip
        key: sdl2-${{ env.SDL_VERSION }}-${{ matrix.targetos }}
    - name: Download SDL2 source
      if: matrix.targetos == 'linux' && steps.cache-sdl2-src.outputs.cache-hit != 'true'
      run: wget http://libsdl.org/release/SDL2-${{ env.SDL_VERSION }}.zip -O SDL2.zip
    - name: Unpack SDL2 source
      if: matrix.targetos == 'linux'
      run: unzip -q SDL2.zip && mv SDL2-${{ env.SDL_VERSION }} SDL2_src

    - name: Download SDL2 VC prebuilt
      if: matrix.targetos == 'win32' && steps.cache-sdl2-src.outputs.cache-hit != 'true'
      run: wget http://libsdl.org/release/SDL2-devel-${{ env.SDL_VERSION }}-VC.zip -O SDL2.zip
    - name: Unpack SDL2 VC prebuilt
      if: matrix.targetos == 'win32'
      run: unzip -q SDL2.zip && mv SDL2-${{ env.SDL_VERSION }} SDL2_VC
      
    - name: Build engine linux
      if: matrix.targetos == 'linux'
      run: |
        scripts/build_linux_engine.sh dedicated
        scripts/build_linux_engine.sh full
    - name: Build engine windows
      if: matrix.targetos == 'win32'
      run: scripts/build_windows_engine.sh
